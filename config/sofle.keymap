#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE PLUS KP_PLUS CARET LEFT_BRACE RIGHT_BRACE LEFT_BRACKET RIGHT_BRACKET LESS_THAN GREATER_THAN EQUAL KP_EQUAL>; };

/ {
    combos {
        compatible = "zmk,combos";

        ESCQW {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
            layers = <0 2 1>;
        };

        toalpha {
            bindings = <&to 6>;
            key-positions = <54 55>;
            layers = <1 2 3 4>;
        };

        tognav {
            bindings = <&tog 1>;
            key-positions = <11 23>;
        };

        leftspc {
            bindings = <&kp SPACE>;
            key-positions = <53 52>;
        };

        rtent {
            bindings = <&kp RET>;
            key-positions = <49 35>;
        };

        rtbkspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <49 35 11>;
        };

        spmulti {
            bindings = <&kp SPACE>;
            key-positions = <53 56>;
        };
    };

    behaviors {
        dash: dash {
            compatible = "zmk,behavior-tap-dance";
            label = "DASH";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp MINUS>;
        };

        layerUpBase: layerUpBase {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERUPBASE";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        bkspc_del: bkspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        tphldkpkp: tphldkpkp {
            compatible = "zmk,behavior-hold-tap";
            label = "TPHLDKPKP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        divideslash: divideslash {
            compatible = "zmk,behavior-tap-dance";
            label = "DIVIDESLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };

        cpslcktap: cpslcktap {
            compatible = "zmk,behavior-tap-dance";
            label = "CPSLCKTAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;
        };

        slayerhold: slayerhold {
            compatible = "zmk,behavior-hold-tap";
            label = "SLAYERHOLD";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        plusequalpipe: plusequalpipe {
            compatible = "zmk,behavior-tap-dance";
            label = "PLUSEQUALPIPE";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>, <&kp PIPE>;

            tapping-term-ms = <150>;
        };

        tolayerhold: tolayerhold {
            compatible = "zmk,behavior-hold-tap";
            label = "TOLAYERHOLD";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
        };

        molayerhold: molayerhold {
            compatible = "zmk,behavior-hold-tap";
            label = "MOLAYERHOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        deletedtap: deletedtap {
            compatible = "zmk,behavior-tap-dance";
            label = "DELETEDTAP";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp D>, <&kp DEL>;
        };

        plus0: plus0 {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS0";
            bindings = <&tphldkpkp F11 N0>, <&plusequalpipe>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        minus9: minus9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MINUS9";
            bindings = <&tphldkpkp F9 N9>, <&minusunder>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        minusunder: minusunder {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUSUNDER";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
        };

        texsubsuper: texsubsuper {
            compatible = "zmk,behavior-tap-dance";
            label = "TEXSUBSUPER";
            #binding-cells = <0>;
            bindings = <&texsuper>, <&texsub>;
        };

        layertapdanceq: layertapdanceq {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERTAPDANCEQ";
            #binding-cells = <0>;
            bindings = <&molayerhold 2 Q>, <&to 2>;
        };

        backto1: backto1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKTO1";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&to 0>;
        };
    };

    macros {
        texce: texce {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BSLH &kp C &kp E &kp LEFT_BRACE &kp SPACE &kp SPACE &kp RBRC &kp LEFT &kp LEFT &caps_word>;
            label = "TEXCE";
        };

        texfrac: texfrac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp BSLH &kp F &kp R &kp A &kp C &kp LEFT_BRACE &kp SPACE &kp SPACE &kp RBRC &kp LEFT_BRACE &kp SPACE &kp SPACE &kp RBRC &kp LEFT &kp LEFT &kp LEFT &kp LEFT &kp LEFT>;
            label = "TEXFRAC";
        };

        texsuper: texsuper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp LBRC &kp SPACE &kp SPACE &kp RIGHT_BRACE &kp LEFT &kp LEFT>;
            label = "TEXSUPER";
        };

        texsub: texsub {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDERSCORE &kp LBRC &kp SPACE &kp SPACE &kp RIGHT_BRACE &kp LEFT &kp LEFT>;
            label = "TEXSUB";
        };

        treemacs: treemacs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp W>;
            label = "TREEMACS";
        };

        projectile: projectile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(P) &kp P>;
            label = "PROJECTILE";
        };

        commaspace: commaspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMASPACE";
        };

        texscinotation: texscinotation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DLLR &kp SPACE &kp SPACE &kp BSLH &kp T &kp I &kp M &kp E &kp S &kp SPACE &kp N1 &kp N0 &kp CARET &kp LEFT_BRACE &kp RBRC &kp DLLR &kp LEFT &kp LEFT>;
            label = "TEXSCINOTATION";
        };

        texdegc: texdegc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DLLR &kp SPACE &kp SPACE &kp CARET &kp BSLH &kp C &kp I &kp R &kp C &kp SPACE &kp BSLH &kp T &kp E &kp X &kp T &kp LEFT_BRACE &kp LS(C) &kp RBRC &kp DLLR>;
            label = "TEXDEGC";
        };

        plutoplot: plutoplot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp B &kp E &kp G &kp I &kp N &kp RET &kp SPACE &kp SPACE &kp SPACE &kp P &kp L &kp O &kp T &kp LPAR &kp X &kp COMMA &kp SPACE &kp Y &kp COMMA &kp SPACE &kp B &kp O &kp R &kp D &kp E &kp R &kp EQUAL &kp COLON &kp B &kp O &kp X &kp COMMA &kp SPACE &kp L &kp E &kp G &kp E &kp N &kp D &kp EQUAL &kp F &kp A &kp L &kp S &kp E &kp COMMA &kp SPACE &kp G &kp R &kp I &kp D &kp EQUAL &kp F &kp A &kp L &kp S &kp E &kp RPAR &kp RET &kp E &kp N &kp D>;
            label = "PLUTOPLOT";
        };

        juliasnailline: juliasnailline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(L) &kp DOWN>;
            label = "JULIASNAILLINE";
        };

        juliasnailbuffer: juliasnailbuffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(K)>;
            label = "JULIASNAILBUFFER";
        };

        juliasnaildoc: juliasnaildoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(D)>;
            label = "JULIASNAILDOC";
        };

        emacstab: emacstab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp T>;
            label = "EMACSTAB";
        };

        emacsclosewindow: emacsclosewindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X) &kp NUMBER_0>;
            label = "EMACSCLOSEWINDOW";
        };

        emacskillbuffer: emacskillbuffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X) &kp K>;
            label = "EMACSKILLBUFFER";
        };

        juliasnaildwim: juliasnaildwim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LC(E) &kp DOWN>;
            label = "JULIASNAILDWIM";
        };

        emacsopen: emacsopen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X) &kp LC(F)>;
            label = "EMACSOPEN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
&kp ESC     &tphldkpkp F1 NUMBER_1  &tphldkpkp F2 NUMBER_2  &tphldkpkp F3 NUMBER_3  &tphldkpkp F4 NUMBER_4  &tphldkpkp F5 NUMBER_5                                            &tphldkpkp F6 NUMBER_6  &tphldkpkp F7 NUMBER_7  &tphldkpkp F8 NUMBER_8  &tphldkpkp F9 N9  &tphldkpkp F11 N0  &kp UP
&kp TAB     &layertapdanceq         &kp W                   &molayerhold 4 E        &kp R                   &kp T                                                             &kp Y                   &kp U                   &kp I                   &kp O             &kp P              &kp DOWN
&bkspc_del  &molayerhold 0 A        &kp S                   &tphldkpkp DEL D        &kp F                   &kp G                                                             &kp H                   &molayerhold 6 J        &kp K                   &molayerhold 3 L  &kp SEMI           &kp SQT
&cpslcktap  &kp Z                   &kp X                   &kp C                   &kp V                   &kp B                   &kp K_PLAY_PAUSE      &kp LG(W)           &kp N                   &kp M                   &kp COMMA               &kp DOT           &kp SLASH          &cpslcktap
                                    &kp LALT                &kp LCTRL               &kp LGUI                &molayerhold 1 SPACE    &molayerhold 2 RET    &molayerhold 2 RET  &molayerhold 1 SPACE    &kp LG(SLASH)           &kp RCTRL               &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREV>;

            label = "alpha";
        };

        NAV {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4                             &kp PG_UP  &none      &trans    &trans     &trans           &kp UP
&trans      &kp KP_NUMLOCK  &mkp MB4      &mkp MB5      &kp LEFT_BRACE        &kp RIGHT_BRACE                          &kp HOME   &kp LA(B)  &kp UP    &kp LC(A)  &kp PRINTSCREEN  &kp DOWN
&kp DEL     &mkp MB2        &mkp MB3      &mkp MB1      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                    &kp END    &kp LEFT   &kp DOWN  &kp RIGHT  &cpslcktap       &kp LEFT
&trans      &kp LC(V)       &kp LC(X)     &kp LC(C)     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &trans  &kp PG_DN  &kp LA(F)  &trans    &trans     &trans           &kp RIGHT
                            &trans        &trans        &trans                &trans                 &to 0     &trans  &trans     &trans     &trans    &trans
            >;

            label = "NAV";
            sensor-bindings =
                <&inc_dec_kp LG(RIGHT) LG(LEFT)>,
                <&inc_dec_kp LG(UP_ARROW) LG(DOWN)>;
        };

        numsym {
            bindings = <
&kp ESCAPE  &kp EXCLAMATION  &kp AT     &kp HASH       &kp LS(DOLLAR)        &kp PERCENT                                                  &kp TILDE    &kp AMPS         &kp ASTERISK     &kp KP_DIVIDE    &kp EQUAL  &trans
&trans      &backto1         &kp PLUS   &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE                                              &kp HOME     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS   &trans
&trans      &kp DEL          &kp MINUS  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                        &kp END      &kp KP_N4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &kp LEFT
&trans      &kp PIPE         &kp UNDER  &kp GRAVE      &kp LBKT              &kp RBKT               &kp KP_NUMLOCK    &trans              &commaspace  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_N3        &kp RET    &tphldkpkp RIGHT_SHIFT RIGHT
                             &trans     &trans         &trans                &trans                 &to 0             &molayerhold 0 RET  &trans       &kp KP_N0        &kp KP_COMMA     &kp PERIOD
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT_ARROW LEFT>,
                <&inc_dec_kp UP DOWN>;

            label = "numsym";
        };

        latex {
            bindings = <
&kp GRAVE  &kp N1      &kp N2     &kp N3         &kp N4                &kp N5                                   &texsubsuper  &kp N7           &kp N8     &kp N9   &kp N0         &trans
&trans     &kp LS(LT)  &kp EQUAL  &kp LS(GT)     &kp LEFT_BRACE        &kp RIGHT_BRACE                          &none         &texdegc         &none      &none    &kp PLUS       &trans
&trans     &none       &kp MINUS  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                    &none         &texce           &texfrac   &trans   &kp MINUS      &trans
&trans     &trans      &none      &none          &kp LBKT              &kp RBKT               &trans    &trans  &none         &texscinotation  &kp COMMA  &kp DOT  &kp BACKSLASH  &trans
                       &trans     &trans         &trans                &trans                 &trans    &trans  &trans        &trans           &trans     &trans
            >;

            label = "latex";
            sensor-bindings =
                <&inc_dec_kp RIGHT LEFT>,
                <&inc_dec_kp UP_ARROW DOWN>;
        };

        emacs {
            bindings = <
&kp LC(G)  &none          &trans       &trans  &trans             &trans                                      &trans               &trans               &trans               &trans               &trans  &trans
&trans     &kp LC(EQUAL)  &kp LA(X)    &trans  &emacstab          &emacstab                                   &kp LA(KP_NUMBER_7)  &kp LC(KP_N7)        &kp LC(KP_N8)        &kp LC(KP_NUMBER_9)  &trans  &trans
&trans     &treemacs      &projectile  &trans  &kp LC(LA(B))      &trans                                      &kp LA(KP_N4)        &kp LC(KP_NUMBER_4)  &kp LC(KP_NUMBER_5)  &kp LC(KP_N6)        &trans  &trans
&trans     &trans         &trans       &trans  &emacsclosewindow  &emacskillbuffer  &trans            &trans  &kp LC(KP_N0)        &kp LC(KP_N1)        &kp LC(KP_N2)        &kp LC(KP_N3)        &trans  &trans
                          &trans       &trans  &trans             &kp LC(C)         &kp LA(RETURN)    &trans  &kp LA(X)            &trans               &trans               &trans
            >;

            label = "emacs";
        };

        control {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &none  &none  &none  &none  &none
&out OUT_BLE  &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&out OUT_USB  &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&sys_reset    &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none  &none
                            &none         &none         &none         &none         &none    &to 0  &none  &none  &none  &none
            >;
        };

        julia {
            bindings = <
&trans  &trans  &trans  &trans          &trans       &trans                         &trans  &trans  &trans             &trans           &trans          &trans
&trans  &trans  &trans  &trans          &kp LS(RET)  &trans                         &trans  &trans  &trans             &trans           &plutoplot      &trans
&trans  &trans  &trans  &juliasnaildoc  &trans       &trans                         &trans  &trans  &juliasnailbuffer  &juliasnaildwim  &trans          &trans
&trans  &trans  &trans  &kp RC(SLASH)   &trans       &trans  &trans    &trans       &trans  &trans  &trans             &juliasnailline  &juliasnaildoc  &trans
                &trans  &trans          &trans       &trans  &trans    &kp LC(RET)  &trans  &trans  &trans             &trans
            >;
        };
    };
};
